import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import { Layout } from "../../components/Layout";
import type { UserDetails } from "../../../lib/types";
import Image from "next/image";
import { useSession } from "next-auth/react";
import { prisma } from "../../server/db/client";

const Profile = ({ profile }: { profile: UserDetails }) => {
  const { data: session } = useSession();
  return (
    <>
      <Head>
        <title>{profile.name} | Guest Book</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex w-[1000px] justify-center rounded-md border-4 bg-white p-4">
          <div className="w-9/12">
            <div className="flex items-center justify-evenly">
              <div className="flex flex-col items-center">
                <Image
                  src={profile.image}
                  alt="avatar"
                  width={100}
                  height={100}
                />
                <h2>{profile.name}</h2>
              </div>
              <div>
                <div>Gönderi sayısı: {profile._count.Post}</div>
                <div>Onaylanmamış gönderi sayısı: {profile.Post.length}</div>
              </div>
            </div>
            {session?.user?.id === profile.id ? (
              <div className="flex flex-col justify-center gap-4 divide-y-4 divide-dotted">
                <h2 className="text-center text-2xl font-bold">
                  Onay Bekleyen Gönderiler
                </h2>
                <div className="flex flex-col">
                  <ul className="w-full divide-y-2">
                    {profile.Post.map((post) => (
                      <li key={post.id} className="flex justify-between">
                        <div className="flex gap-4 p-2">
                          <div className="flex flex-col">
                            <h2 className="text-2xl font-bold">{post.title}</h2>
                            <p className="break-all text-lg">{post.content}</p>
                          </div>
                        </div>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            ) : (
              <div className="text-bold text-center text-lg">Yetkiniz yok</div>
            )}
          </div>
        </div>
      </Layout>
    </>
  );
};

export default Profile;

//getServerSideProps
export const getServerSideProps = async (
  context: GetServerSidePropsContext<{ id: string }>
) => {
  const { id } = context.query;

  const user = await prisma.user.findUnique({
    where: {
      id: String(id),
    },
    include: {
      _count: {
        select: {
          Post: true,
        },
      },
      Post: {
        where: {
          published: false,
        },
        orderBy: {
          createdAt: "desc",
        },
      },
    },
  });

  if (user) {
    const profile = JSON.parse(JSON.stringify(user));
    return {
      props: {
        profile,
      },
    };
  }
  return {
    redirect: {
      destination: "/",
      permanent: false,
    },
  };
};
